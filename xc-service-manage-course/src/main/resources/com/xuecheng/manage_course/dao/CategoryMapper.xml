<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuecheng.manage_course.dao.CategoryMapper">

    <!-- 配置一对多的关系
    List<A>list
       property：填写pojo类中集合类类属性的名称
       javaType：JavaType是用来指定pojo中属性的类型，填写集合类型的名称list类名
       ofType:ofType指定的是映射到list集合属性中pojo的类型，集合泛型中的类名A
   -->
    <resultMap type="com.xuecheng.framework.domain.course.ext.CategoryNode" id="categoryMap" >
        <id property="id" column="one_id"/>
        <result property="name" column="one_name"/>
        <collection property="children"  ofType="com.xuecheng.framework.domain.course.ext.CategoryNode">
            <id property="id" column="two_id"/>
            <result property="name" column="two_name"/>
            <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.CategoryNode">
                <id property="id" column="three_id"/>
                <result property="name" column="three_name"/>
            </collection>
        </collection>
    </resultMap>

    <select id="list"  resultMap="categoryMap">
        SELECT
        a.id one_id,
        a.name one_name,
        b.id two_id,
        b.name two_name,
        c.id three_id,
        c.name three_name
        FROM
        category a LEFT JOIN category b
        ON a.id = b.parentid
        LEFT JOIN category c
        ON b.id = c.parentid
        WHERE a.parentid = '0'
        ORDER BY a.orderby,
        b.orderby,
        c.orderby
    </select>


</mapper>